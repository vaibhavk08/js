<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
        integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">

    <title>Welcome to Library</title>
</head>

<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
       
        <a class="navbar-brand" href="#">World Library</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportesContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav link" href="#">Home <span class="sr-only">(current)</span> </a>
                </li>
            </ul>
            <form class="form-inline my-2 my-lg-0">
                <input class="form-control mr-sm-2" id="searchTxt" type="search" placeholder="search"
                    aria-label="Search">
                <button class="btn btn-outline-success my-2 my-sm-0">Search</button>
            </form>
        </div>
    </nav>
     <div class="" id="message">
           
                  </div>
     </div>


    <div class="container">
        <h1>World Library </h1>
        <hr>
        <form id="libraryForm">
            <div class="form-group row">
                <label for="bookName" class="col-sm-2 col-form-label">Book Name

                </label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="bookName" placeholder="Book Name">
                </div>
            </div>
            <div class="form-group row">
                <label for="author" class="col-sm-2 col-form-label">Author</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="author" placeholder="Author">
                </div>
            </div>
            <fieldset class="form-group">
                <div class="row">
                    <legend class="col-form-label col-sm-2 pt-0">Radios</legend>
                    <div class="col-sm-10">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="type" id="fiction" value="fiction"
                                checked>
                            <label class="form-check-label" for="gridRadios1">
                                Fiction
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="type" id="programming"
                                value="programming">
                            <label class="form-check-label" for="gridRadios2">
                                Computer Programming
                            </label>
                        </div>
                        <div class="form-check disabled">
                            <input class="form-check-input" type="radio" name="type" id="cooking" value="cooking">
                            <label class="form-check-label" for="gridRadios3">
                                Cooking
                            </label>
                        </div>
                    </div>
                </div>
            </fieldset>

            <div class="form-group row">
                <div class="col-sm-10">
                    <button type="submit" class="btn btn-primary">Add Book</button>
                </div>
            </div>
        </form>

        <div id="table">

            <h1>Your Books</h1>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">Author</th>
                        <th scope="col">Type</th>
                    </tr>
                </thead>
                <tbody id="tableBody"></tbody>
            </table>
        </div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <!--  <script src="index.js"></script>-->
    <script src="indexes6.js"></script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"
        integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV"
        crossorigin="anonymous"></script>
</body>
</html>


// index.js file which is to be in another file

console.log("this is index.js");


//Constructor

function Book(name, author, type){
    this.name = name;
    this.author = author;
    this.type = type;
}

// display contructor

function Display(){

}

// add methods to diplay

Display.prototype.add =function(book){
    console.log("adding to UI");
    tableBody = document.getElementById('tableBody');
    let uiString = `<tr>
                <td>${book.name}</td>
                <td>${book.author}</td>
                <td>${book.type}</td>
                    </tr>`;
    tableBody.innerHTML += uiString;
    
}


//implement the clear function
Display.prototype.clear = function(){
    let libraryForm = document.getElementById('libraryForm');
    libraryForm.reset(); 
}
// implement the  validate functioon
Display.prototype.validate = function(book){
    if ((book.name.length<2) || (book.author.length<2))
    {
        return false;
    }
    else{
        return true;
    }
}
Display.prototype.show = function(type, displayMessage){
    let message = document.getElementById('message');
    message.innerHTML = `<div class="alert alert-$(type) alert-dismissible fade show" role="alert">
                        <strong>Message:</strong> $(displayMessage)
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>`;
    setTimeout(function(){
        message.innerHTML= ``
    }, 2000);                
}

 
// add submit event listener to library form
let libraryForm = document.getElementById('libraryForm');
libraryForm.addEventListener('submit', libraryFormSubmit);

function libraryFormSubmit(e) {
 console.log('you have submitted library form');
 let name = document.getElementById('bookName').value;
 let  author = document.getElementById('author').value;
 let type;
 
 let fiction= document.getElementById('fiction');
 let programming= document.getElementById('programming');
 let cooking= document.getElementById('cooking');
 
 if (fiction.checked){
   type= fiction.value;   
 }
 else if (programming.checked){
    type= programming.value;   
  }

  else if (cooking.checked){
    type= cooking.value;   
  }

 let book = new Book(name, author, type);
 console.log(book);

 let display = new Display();

 if(display.validate(book)){
            display.add(book);
            display.clear();
            display.show('Success', ' you have added');
 
        }
 else{
     //show error to 
     display.show('danger', ' sorry you cannot add this book');
 }       

 e.preventDefault(); 
}

// this is another js file which does the same work

console.log('this is the ES6 version');

class Book{
    constructor(name, author, type){
        this.name = name;
        this.author = author;
        this.type = type;
    }
}

class Display {
    add(book) {
        console.log("adding to UI");
        let tableBody = document.getElementById('tableBody');
        let uiString = `<tr>
                    <td>${book.name}</td>
                    <td>${book.author}</td>
                    <td>${book.type}</td>
                        </tr>`;
        tableBody.innerHTML += uiString;

    }
    clear(){
        let libraryForm = document.getElementById('libraryForm');
        libraryForm.reset(); 
    }
    validate(book){
        if (book.name.length<2 || book.author.length<2)
        {
            return false;
        }
        else{
            return true;
        }
    }
    show(type, displayMessage){
        let message = document.getElementById('message');
        message.innerHTML = `<div class="alert alert-$(type) alert-dismissible fade show" role="alert">
                            <strong>Message:</strong> $(displayMessage)
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                            </button>
                        </div>`;
        setTimeout(function(){
            message.innerHTML= ``
        }, 2000);                
    }
}    
// add submit event listener to library form
let libraryForm = document.getElementById('libraryForm');
libraryForm.addEventListener('submit', libraryFormSubmit);

function libraryFormSubmit(e) {
 console.log('you have submitted library form');
 let name = document.getElementById('bookName').value;
 let  author = document.getElementById('author').value;
 let type;
 let fiction= document.getElementById('fiction');
 let programming= document.getElementById('programming');
 let cooking= document.getElementById('cooking');
 
 if (fiction.checked){
   type= fiction.value;   
 }
 else if (programming.checked){
    type= programming.value;   
  }

  else if (cooking.checked) {
    type= cooking.value ;   
  }
}


